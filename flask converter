item_route='/deposit/depositions/<{0}:pid_value>'.format(_PID)
_PID = 'pid(depid,record_class="zenodo.modules.deposit.api:ZenodoDeposit")'

class PIDConverter(BaseConverter):
    """Converter for PID values in the route mapping.

    This class is a custom routing converter defining the 'PID' type.
    See http://werkzeug.pocoo.org/docs/0.12/routing/#custom-converters.

    Use ``pid`` as a type in the route pattern, e.g.: the use of
    route decorator: ``@blueprint.route('/record/<pid(recid):pid_value>')``,
    will match and resolve a path: ``/record/123456``.
    """

    def __init__(self, url_map, pid_type, getter=None, record_class=None):
        """Initialize the converter."""
        super(PIDConverter, self).__init__(url_map)
        getter = obj_or_import_string(getter, default=partial(
            obj_or_import_string(record_class, default=Record).get_record,
            with_deleted=True
        ))
        self.resolver = Resolver(pid_type=pid_type, object_type='rec',
                                 getter=getter)

    def to_python(self, value):
        """Resolve PID value."""
        return LazyPIDValue(self.resolver, value)
