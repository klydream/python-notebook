一、这四个方法的用处

1、用来编码和解码URI的

统一资源标识符，或叫做 URI，是用来标识互联网上的资源（例如，网页或文件）和怎样访问这些资源的传输协议（例如，HTTP 或 FTP）的字符串。除了encodeURI、encodeURIComponent、decodeURI、decodeURIComponent四个用来编码和解码 URI 的函数之外 ECMAScript 语言自身不提供任何使用 URL 的支持。
2、URI组成形式
一个 URI 是由组件分隔符分割的组件序列组成。其一般形式是：

Scheme : First / Second ; Third ? Fourth

其中斜体的名字代表组件；“:”, “/”, “;”，“?”是当作分隔符的保留字符。

3、有和不同？

encodeURI 和 decodeURI 函数操作的是完整的 URI；这俩函数假定 URI 中的任何保留字符都有特殊意义，所有不会编码它们。

encodeURIComponent 和 decodeURIComponent 函数操作的是组成 URI 的个别组件；这俩函数假定任何保留字符都代表普通文本，所以必须编码它们，所以它们（保留字符）出现在一个完整 URI 的组件里面时不会被解释成保留字符了。

以上说明摘自ECMAScript标准，为了容易读懂做了点编辑加工。

4、图解四个函数的不同：

ECMA对这四个函数还做了详细解释，可能是为了写的更逻辑化一些，采用了类似变量配合逻辑的写法来说明，但是让初学者看得云里雾里的特别绕，所以有必要把它写得更像是人读的东西……

 图解转义与反转义URI的四种方法

当 URI 里包含一个没在上面列出的字符或有时不想让给定的保留字符有特殊意义，那么必须编码这个字符。字符被转换成 UTF-8 编码，首先从 UT​​F-16 转换成相应的代码点值的替代。然后返回的字节序列转换为一个字符串，每个字节用一个“%xx”形式的转移序列表示。（具体转换规则可以参考抽象操作Encode和Decode的说明）

URL中传参带有%2F等特殊字符

用URL传参带特殊字符，特殊字符丢失，比如传参的时候，用&符号连接，如果其中的一个参数中含有 # $ ^ & * + - 这些符号的时候，在另一个页面getParameter就会取不到穿过来的参数。

比如在a.jsp中，我要跳转到b.jsp，在a.jsp中这样写：

b.jsp?Parameter1=wks&amp;Parameter2=happycosn。

如果Parameter1中含有"#$ ^ &amp; * + ="这些特殊字符，在b.jsp中就得不到。并且，我在a.jsp中已经通过encode编码了，
在b.jsp中也用decode 进行了解码。这时候，只要

所传入的参数没有特殊字符都可以在b.jsp页面取到，但是有特殊字符就取不到了。 像这样：

b.jsp?Parameter1=wks#bamboo&amp;Parameter2=happycosn+#zl

这时候，所取到的参数就不会有bamboo和zl。

解决问题如下：

有些符号在URL中是不能直接传递的，如果要在URL中传递这些特殊符号，那么就要使用他们的编码了。
编码的格式为：%加字符的ASCII码，即一个百分号%，后面跟对应字符的ASCII（16进制）码值。例如 空格的编码值是"%20"。
如果不使用转义字符，这些编码就会当URL中定义的特殊字符处理。
下表中列出了一些URL特殊符号及编码 十六进制值
1.+ URL 中+号表示空格 %2B
2.空格 URL中的空格可以用+号或者编码 %20
3./ 分隔目录和子目录 %2F
4.? 分隔实际的 URL 和参数 %3F
5.% 指定特殊字符 %25
6.# 表示书签 %23
7.&amp; URL 中指定的参数间的分隔符 %26
8.= URL 中指定参数的值 %3D 
